// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniCoreIngWeb.Data;

#nullable disable

namespace MiniCoreIngWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241224031245_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MiniCoreIngWeb.Data.Departamento", b =>
                {
                    b.Property<int>("DepartamentoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartamentoID"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartamentoID");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("MiniCoreIngWeb.Data.Empleado", b =>
                {
                    b.Property<int>("EmpleadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmpleadoID"), 1L, 1);

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmpleadoID");

                    b.HasIndex("DepartamentoID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("MiniCoreIngWeb.Data.Gasto", b =>
                {
                    b.Property<int>("GastoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GastoID"), 1L, 1);

                    b.Property<int>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("GastoID");

                    b.HasIndex("EmpleadoID");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("MiniCoreIngWeb.Data.Empleado", b =>
                {
                    b.HasOne("MiniCoreIngWeb.Data.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("MiniCoreIngWeb.Data.Gasto", b =>
                {
                    b.HasOne("MiniCoreIngWeb.Data.Empleado", "Empleado")
                        .WithMany("Gastos")
                        .HasForeignKey("EmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("MiniCoreIngWeb.Data.Departamento", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("MiniCoreIngWeb.Data.Empleado", b =>
                {
                    b.Navigation("Gastos");
                });
#pragma warning restore 612, 618
        }
    }
}
